'use client';

import { useState } from 'react';


import Head from 'next/head';



const SUPPORTED_PLATFORMS = [
  'YouTube', 'Instagram', 'TikTok', 'Twitter/X', 'Facebook', 
  'LinkedIn', 'Pinterest', 'Snapchat', 'Reddit', 'Twitch'
];



export default function Home() {
  const [url, setUrl] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [result, setResult] = useState(null);
  const [error, setError] = useState('');
  const [downloadProgress, setDownloadProgress] = useState(0);



  const detectPlatform = (url) => {
 Â Â  const platforms = {
 Â Â Â Â  'youtube.com': 'YouTube',
 Â Â Â Â  'youtu.be': 'YouTube',
 Â Â Â Â  'instagram.com': 'Instagram',
 Â Â Â Â  'tiktok.com': 'TikTok',
 Â Â Â Â  'twitter.com': 'Twitter',
 Â Â Â Â  'x.com': 'Twitter',
 Â Â Â Â  'facebook.com': 'Facebook',
 Â Â  };



 Â Â  for (const [domain, platform] of Object.entries(platforms)) {
 Â Â Â Â  if (url.includes(domain)) return platform;
 Â Â  }
 Â Â  return 'Unknown';
  };



  const handleSubmit = async (e) => {
 Â Â  e.preventDefault();
 Â Â  if (!url.trim()) return;



 Â Â  setIsLoading(true);
 Â Â  setError('');
 Â Â  setResult(null);
 Â Â  setDownloadProgress(0);



 Â Â  try {
 Â Â Â Â  const platform = detectPlatform(url);
 Â Â Â Â  
 Â Â Â Â  // Simulate progress
 Â Â Â Â  const progressInterval = setInterval(() => {
 Â Â Â Â Â Â  setDownloadProgress(prev => {
 Â Â Â Â Â Â Â Â  if (prev >= 90) {
 Â Â Â Â Â Â Â Â Â Â  clearInterval(progressInterval);
 Â Â Â Â Â Â Â Â Â Â  return prev;
 Â Â Â Â Â Â Â Â  }
 Â Â Â Â Â Â Â Â  return prev + Math.random() * 10;
 Â Â Â Â Â Â  });
 Â Â Â Â  }, 1000);
 Â Â Â Â  
 Â Â Â Â  const response = await fetch('/api/download', {
 Â Â Â Â Â Â  method: 'POST',
 Â Â Â Â Â Â  headers: {
 Â Â Â Â Â Â Â Â  'Content-Type': 'application/json',
 Â Â Â Â Â Â  },
 Â Â Â Â Â Â  body: JSON.stringify({ url, platform }),
 Â Â Â Â  });



 Â Â Â Â  const data = await response.json();
 Â Â Â Â  clearInterval(progressInterval);
 Â Â Â Â  setDownloadProgress(100);



 Â Â Â Â  if (!response.ok) {
 Â Â Â Â Â Â  throw new Error(data.error || 'Failed to process URL');
 Â Â Â Â  }



 Â Â Â Â  setResult(data);
 Â Â  } catch (err) {
 Â Â Â Â  setError(err.message);
 Â Â Â Â  setDownloadProgress(0);
 Â Â  } finally {
 Â Â Â Â  setIsLoading(false);
 Â Â  }
  };



  const downloadFile = async (downloadUrl, filename) => {
 Â Â  try {
 Â Â Â Â  // Create a link element and trigger download
 Â Â Â Â  const link = document.createElement('a');
 Â Â Â Â  link.href = downloadUrl;
 Â Â Â Â  link.download = filename;
 Â Â Â Â  document.body.appendChild(link);
 Â Â Â Â  link.click();
 Â Â Â Â  document.body.removeChild(link);
 Â Â  } catch (err) {
 Â Â Â Â  setError('Failed to download file');
 Â Â  }
  };



  return (
 Â Â  <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
 Â Â Â Â  <Head>
 Â Â Â Â Â Â  <title>Universal Social Media Downloader</title>
 Â Â Â Â Â Â  <meta name="description" content="Download videos, images, and audio from any social media platform" />
 Â Â Â Â Â Â  <link rel="icon" href="/favicon.ico" />
 Â Â Â Â  </Head>



 Â Â Â Â  <div className="container mx-auto px-4 py-8">
 Â Â Â Â Â Â  {/* Header */}
 Â Â Â Â Â Â  <div className="text-center mb-12">
 Â Â Â Â Â Â Â Â  <h1 className="text-4xl md:text-5xl font-bold text-gray-800 mb-4">
 Â Â Â Â Â Â Â Â Â Â  Social Media Downloader
 Â Â Â Â Â Â Â Â  </h1>
 Â Â Â Â Â Â Â Â  <p className="text-lg text-gray-600 max-w-2xl mx-auto">
 Â Â Â Â Â Â Â Â Â Â  Download videos, images, and audio from any social media platform. 
 Â Â Â Â Â Â Â Â Â Â  Just paste the URL and we'll handle the rest!
 Â Â Â Â Â Â Â Â  </p>
 Â Â Â Â Â Â  </div>



 Â Â Â Â Â Â  {/* Supported Platforms */}
 Â Â Â Â Â Â  <div className="mb-8">
 Â Â Â Â Â Â Â Â  <h2 className="text-xl font-semibold text-gray-700 mb-4 text-center">
 Â Â Â Â Â Â Â Â Â Â  Supported Platforms
 Â Â Â Â Â Â Â Â  </h2>
 Â Â Â Â Â Â Â Â  <div className="flex flex-wrap justify-center gap-2">
 Â Â Â Â Â Â Â Â Â Â  {SUPPORTED_PLATFORMS.map((platform) => (
 Â Â Â Â Â Â Â Â Â Â Â Â  <span
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  key={platform}
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm font-medium"
 Â Â Â Â Â Â Â Â Â Â Â Â  >
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  {platform}
 Â Â Â Â Â Â Â Â Â Â Â Â  </span>
 Â Â Â Â Â Â Â Â Â Â  ))}
 Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â  </div>



 Â Â Â Â Â Â  {/* Main Form */}
 Â Â Â Â Â Â  <div className="max-w-4xl mx-auto">
 Â Â Â Â Â Â Â Â  <div className="card">
 Â Â Â Â Â Â Â Â Â Â  <form onSubmit={handleSubmit} className="space-y-6">
 Â Â Â Â Â Â Â Â Â Â Â Â  <div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <label htmlFor="url" className="block text-lg font-medium text-gray-700 mb-2">
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  Enter Social Media URL
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </label>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <input
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  type="url"
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  id="url"
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  value={url}
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  onChange={(e) => setUrl(e.target.value)}
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  placeholder="https://www.youtube.com/watch?v=example..."
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  className="input text-lg"
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  required
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  />
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  {url && (
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <p className="mt-2 text-sm text-gray-600">
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  Detected platform: <span className="font-semibold text-blue-600">
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  {detectPlatform(url)}
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </span>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </p>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  )}
 Â Â Â Â Â Â Â Â Â Â Â Â  </div>



 Â Â Â Â Â Â Â Â Â Â Â Â  <button
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  type="submit"
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  disabled={isLoading || !url.trim()}
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  className="btn btn-primary w-full py-3 px-6 text-lg"
 Â Â Â Â Â Â Â Â Â Â Â Â  >
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  {isLoading ? 'Processing...' : 'Download Media'}
 Â Â Â Â Â Â Â Â Â Â Â Â  </button>
 Â Â Â Â Â Â Â Â Â Â  </form>



 Â Â Â Â Â Â Â Â Â Â  {/* Progress Bar */}
 Â Â Â Â Â Â Â Â Â Â  {isLoading && downloadProgress > 0 && (
 Â Â Â Â Â Â Â Â Â Â Â Â  <div className="mt-6">
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <div className="flex justify-between mb-2">
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <span className="text-sm text-gray-600">Processing...</span>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <span className="text-sm text-gray-600">{Math.round(downloadProgress)}%</span>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <div className="w-full bg-gray-200 rounded-full h-2">
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <div
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  className="bg-gradient-to-r from-blue-600 to-purple-600 h-2 rounded-full transition-all duration-300"
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  style={{ width: `${downloadProgress}%` }}
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  ></div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â Â Â Â Â  )}



 Â Â Â Â Â Â Â Â Â Â  {/* Error Message */}
 Â Â Â Â Â Â Â Â Â Â  {error && (
 Â Â Â Â Â Â Â Â Â Â Â Â  <div className="mt-6 p-4 bg-red-50 border border-red-200 rounded-lg">
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <p className="text-red-700">{error}</p>
 Â Â Â Â Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â Â Â Â Â  )}



 Â Â Â Â Â Â Â Â Â Â  {/* Success Result */}
 Â Â Â Â Â Â Â Â Â Â  {result && (
 Â Â Â Â Â Â Â Â Â Â Â Â  <div className="mt-6 p-6 bg-green-50 border border-green-200 rounded-lg">
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <h3 className="text-lg font-semibold text-green-800 mb-4">
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  Media Found Successfully! ðŸŽ‰
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </h3>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <div className="space-y-4">
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <span className="font-medium text-gray-700">Platform:</span>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <span className="ml-2 text-gray-600">{result.platform}</span>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <span className="font-medium text-gray-700">Type:</span>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <span className="ml-2 text-gray-600">{result.type}</span>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <span className="font-medium text-gray-700">Quality:</span>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <span className="ml-2 text-gray-600">{result.quality}</span>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <span className="font-medium text-gray-700">Size:</span>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <span className="ml-2 text-gray-600">{result.size}</span>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </div>



 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  {result.title && (
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <span className="font-medium text-gray-700">Title:</span>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <p className="mt-1 text-gray-600">{result.title}</p>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  )}



 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  {result.thumbnail && (
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <img
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  src={result.thumbnail}
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  alt="Thumbnail"
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  className="w-full max-w-sm rounded-lg shadow-md"
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  />
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  )}



 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <div className="flex flex-wrap gap-3">
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  {result.downloads?.map((download, index) => (
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <button
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  key={index}
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  onClick={() => downloadFile(download.url, download.filename)}
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  className="btn btn-primary flex items-center gap-2"
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  >
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </svg>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  {download.label}
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </button>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  ))}
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â Â Â Â Â  )}
 Â Â Â Â Â Â Â Â  </div>
 Â Â Â Â Â Â  </div>
 Â Â Â Â  </div>
 Â Â  </div>
  );
}
